Strategies of dealing with deadlocks:

Avoid deadlocks
In the deadlock avoidance, the operating system checks whether the system is in safe state or in unsafe state at every step which the operating system performs. The process continues until the system is in safe state. Once the system moves to unsafe state, the OS has to retreat one step. This requires more information about each process, and tends to lead to low device utilization.

Recovery
This approach let the processes fall in deadlock and then periodically check whether deadlock occur in the system or not. If it occurs then it applies some of the recovery methods to the system to get rid of deadlock. In addition to the performance hit of constantly checking for deadlocks, and there is potential for lost work when processes must be aborted or have their resources preempted.

Prevent deadlock
Deadlock happens only when Mutual Exclusion, hold and wait, no preemption and circular wait holds simultaneously. If it is possible to violate one of the four conditions at any time then the deadlock can never occur in the system.

Therefore, avoidance is less effective than prevention, and more effective than recovery. Deadlock prevention is better than other strategies because it required less info about processes. 
